spring.application.name=INSCRIPTION-EN-LIGNE-BACKEND


# tomcat configuration
server.port=${port}

#postgreSQl configuration
spring.datasource.url=jdbc:postgresql://localhost:5432/${dbName}
spring.datasource.username=${userName}
spring.datasource.password=${password}


# swagger configuration
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true

#hibernate config
spring.jpa.hibernate.ddl-auto=update
spring.sql.init.mode=always
spring.jpa.show-sql=false

spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB


# mail configuration

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=votre-email@gmail.com
spring.mail.password=votre-mot-de-passe
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

#minio configuration
# URL du serveur MinIO
minio.url=http://localhost:9000

# Cl�s d'acc�s MinIO (modifie-les si n�cessaire)
minio.access-key=admin
minio.secret-key=admin123

# Nom du bucket o� stocker les fichiers
minio.bucket-name=inscriptions-management


# JWT configuration
jwt.secret=1Gmn7N06rjiLK02f0L+o1rj5IfI6z1UQUn6B+Hokt0Lrs2XhXbdcYIw/fyr5HcQGKpXLXe5oyXeDU5Sv/mgZ6w==
jwt.expiration.milliseconds=86400000

# OAuth2 configuration
spring.security.oauth2.client.registration.google.client-id=${GOOGLE_CLIENT_ID:${client_id}}
spring.security.oauth2.client.registration.google.client-secret=${GOOGLE_CLIENT_SECRET:${secret}}
spring.security.oauth2.client.registration.google.scope=openid,profile,email
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:9001/login/oauth2/code/google

spring.security.oauth2.client.registration.microsoft.client-id=${MICROSOFT_CLIENT_ID:your-microsoft-client-id}
spring.security.oauth2.client.registration.microsoft.client-secret=${MICROSOFT_CLIENT_SECRET:your-microsoft-client-secret}
spring.security.oauth2.client.registration.microsoft.scope=openid,profile,email
spring.security.oauth2.client.registration.microsoft.redirect-uri={baseUrl}/login/oauth2/code/{registrationId}
spring.security.oauth2.client.registration.microsoft.authorization-grant-type=authorization_code

spring.security.oauth2.client.provider.microsoft.authorization-uri=https://login.microsoftonline.com/common/oauth2/v2.0/authorize
spring.security.oauth2.client.provider.microsoft.token-uri=https://login.microsoftonline.com/common/oauth2/v2.0/token
spring.security.oauth2.client.provider.microsoft.user-info-uri=https://graph.microsoft.com/v1.0/me
spring.security.oauth2.client.provider.microsoft.user-name-attribute=id

# App configuration
app.oauth2.authorized-redirect-uris=http://localhost:3000/oauth2/redirect
app.base-url=http://localhost:9001
app.mail.from=noreply@inscription-en-ligne.com

# Security configuration
app.security.max-tentatives=5
app.security.duree-blocage=30

# Redis configuration (optional)
# spring.data.redis.host=localhost
# spring.data.redis.port=6379

logging.level.org.springframework.scheduling=INFO

